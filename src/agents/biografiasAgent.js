const fs = require('fs');
const path = require('path');

// Fun√ß√£o para criar √≠ndice resumido de todas as biografias
function getBiografiasIndex() {
  try {
    const biografiasRootDir = path.join(__dirname, '../../dados/biografias');
    const index = [];
    const subfolders = ['jogadores', 'presidentes', 'treinadores', 'outras_figuras'];

    subfolders.forEach(subfolder => {
      const biografiasDir = path.join(biografiasRootDir, subfolder);

      if (fs.existsSync(biografiasDir)) {
        const files = fs.readdirSync(biografiasDir);
        const historiaFiles = files.filter(f => f.startsWith('historia_') && f.endsWith('.md'));

        historiaFiles.forEach(file => {
          const filePath = path.join(biografiasDir, file);
          if (fs.statSync(filePath).isFile()) {
            const content = fs.readFileSync(filePath, 'utf-8');
            // Extrair t√≠tulo (primeira linha com #)
            const titleMatch = content.match(/^#\s+(.+)$/m);
            const title = titleMatch ? titleMatch[1] : file;

            // Extrair primeiro par√°grafo para resumo
            const lines = content.split('\n');
            let summary = '';
            for (const line of lines) {
              if (line.trim() && !line.startsWith('#') && !line.startsWith('**')) {
                summary = line.substring(0, 200);
                break;
              }
            }

            index.push({ file, title, summary, subfolder });
          }
        });
      }
    });

    return index;
  } catch (error) {
    console.error('Erro ao criar √≠ndice de biografias:', error);
    return [];
  }
}

// Fun√ß√£o para buscar biografias espec√≠ficas em todas as subpastas
function searchBiografias(query) {
  try {
    const biografiasRootDir = path.join(__dirname, '../../dados/biografias');
    const subfolders = ['jogadores', 'presidentes', 'treinadores', 'outras_figuras'];
    const lowerQuery = query.toLowerCase();
    // Normalizar query: remover acentos e trocar espa√ßos por underscores
    const normalizedQuery = lowerQuery
      .normalize('NFD').replace(/[\u0300-\u036f]/g, '') // Remove acentos
      .replace(/\s+/g, '_'); // Substitui espa√ßos por underscores

    const results = [];
    const queryWords = lowerQuery.split(/\s+/).filter(w => w.length > 2);

    // Procurar em TODAS as subpastas (n√£o quebrar no meio)
    for (const subfolder of subfolders) {
      const biografiasDir = path.join(biografiasRootDir, subfolder);

      if (fs.existsSync(biografiasDir)) {
        const files = fs.readdirSync(biografiasDir);
        const historiaFiles = files.filter(f => f.startsWith('historia_') && f.endsWith('.md'));

        for (const file of historiaFiles) {
          const filePath = path.join(biografiasDir, file);
          if (fs.statSync(filePath).isFile()) {
            const content = fs.readFileSync(filePath, 'utf-8');
            const fileNormalized = file.toLowerCase()
              .normalize('NFD').replace(/[\u0300-\u036f]/g, '');

            // Buscar por: 1) nome normalizado no arquivo (exacto ou por palavras), 2) query normal no conte√∫do
            const matchesFileExact = fileNormalized.includes(normalizedQuery);
            // Tamb√©m procurar por TODAS as palavras do query no nome do arquivo
            const matchesFileWords = queryWords.length > 0 &&
              queryWords.every(word => fileNormalized.includes(word));
            const matchesFile = matchesFileExact || matchesFileWords;

            // Para content match, procurar por palavras completas do query (ex: "tavares" E "bello")
            const matchesContent = queryWords.length > 0 &&
              queryWords.every(word => content.toLowerCase().includes(word));

            if (matchesFile || matchesContent) {
              results.push({
                file,
                content: content, // Biografia completa sem truncar
                // Match exacto no arquivo = score 100, match no conte√∫do = score baseado em n√∫mero de palavras
                score: matchesFile ? 100 : (queryWords.length > 1 ? 50 : 10),
                subfolder,
                isFileMatch: matchesFile
              });

              // Limitar a 10 resultados para n√£o exceder tokens
              if (results.length >= 10) break;
            }
          }
        }
        // Se atingiu limite de resultados, n√£o procura nas outras pastas
        if (results.length >= 10) break;
      }
    }

    // Ordenar por score (matches no nome do arquivo primeiro) e depois por subfolder priority
    // Prioridade: presidentes > treinadores > outras_figuras > jogadores
    const folderPriority = { presidentes: 3, treinadores: 2, outras_figuras: 1, jogadores: 0 };
    results.sort((a, b) => {
      if (b.score !== a.score) {
        return b.score - a.score; // Score primeiro
      }
      return (folderPriority[b.subfolder] || 0) - (folderPriority[a.subfolder] || 0); // Depois folder priority
    });

    return results;
  } catch (error) {
    console.error('Erro ao buscar biografias:', error);
    return [];
  }
}

function getBiografiasData() {
  try {
    const index = getBiografiasIndex();

    let data = `\n\n# Base de Dados de Biografias do SC Farense\n\n`;
    data += `üìä **${index.length} biografias dispon√≠veis**\n\n`;
    data += `## √çndice de Personalidades:\n\n`;

    // Criar √≠ndice compacto com nomes
    index.forEach((bio, i) => {
      data += `${i + 1}. **${bio.title}**\n`;
    });

    data += `\n\n## ‚ö° INSTRU√á√ïES DE BUSCA AVAN√áADA\n\n`;
    data += `Quando o utilizador perguntar sobre uma personalidade espec√≠fica, usa o contexto acima para identificar se existe biografia.\n`;
    data += `Se existir, fornece informa√ß√£o baseada no t√≠tulo e no que sabes estar dispon√≠vel.\n\n`;
    data += `Se o utilizador pedir detalhes espec√≠ficos sobre algu√©m do √≠ndice, podes fornecer informa√ß√£o geral contextualizada.\n\n`;

    return data;
  } catch (error) {
    console.error('Erro ao ler ficheiros de biografias:', error);
    return '';
  }
}

module.exports = {
  searchBiografias: searchBiografias,
  context: `
    # Assistente de Biografias do Sporting Clube Farense

## Identidade e Miss√£o
√âs um especialista em hist√≥ria do Sporting Clube Farense, com conhecimento aprofundado sobre as figuras hist√≥ricas do clube. A tua fun√ß√£o √© fornecer informa√ß√£o biogr√°fica precisa, respeitosa e contextualizada sobre personalidades que marcaram a hist√≥ria dos Le√µes de Faro.

---

## REGRAS FUNDAMENTAIS DE PRECIS√ÉO FACTUAL

### ‚ö†Ô∏è POL√çTICA DE ZERO TOLER√ÇNCIA PARA INFORMA√á√ÉO N√ÉO VERIFICADA

**NUNCA fa√ßas o seguinte:**
- Inventar ou supor datas, factos ou realiza√ß√µes
- Extrapolar informa√ß√£o baseada em conhecimento geral de futebol
- Criar narrativas fict√≠cias ou embelezadas
- Atribuir feitos ou caracter√≠sticas n√£o documentadas

**SEMPRE faz o seguinte:**
- Utiliza EXCLUSIVAMENTE os dados biogr√°ficos fornecidos no sistema
- Quando uma pessoa N√ÉO consta na base de dados, responde: *"Lamento, mas n√£o tenho informa√ß√£o biogr√°fica verificada sobre [nome] na minha base de dados sobre o Sporting Clube Farense. Para informa√ß√£o fidedigna, recomendo consultar os arquivos oficiais do clube."*
- Cita apenas factos explicitamente documentados
- Mant√©m rigor hist√≥rico absoluto

---

## Diretrizes de Comunica√ß√£o

### 1. Terminologia e Refer√™ncias ao Clube
- Utiliza as designa√ß√µes oficiais: "Sporting Clube Farense" ou "Le√µes de Faro"
- Varia a nomenclatura para tornar o texto mais din√¢mico
- Evita abrevia√ß√µes excessivas (usa "S.C. Farense" apenas quando apropriado)

### 2. Tom e Estilo
- **Tom**: Respeitoso, admirativo e solene ao referir figuras hist√≥ricas
- **Estilo**: Narrativo e envolvente, mas factual

### 3. FOCO PRINCIPAL: PER√çODO NO FARENSE
**EXTREMAMENTE IMPORTANTE:**
- As respostas devem centrar-se PRINCIPALMENTE no tempo que a pessoa esteve no Farense
- Inclui TODOS os detalhes dispon√≠veis sobre:
  - √âpocas espec√≠ficas em que jogou/trabalhou no clube
  - Momentos hist√≥ricos vividos com a camisola do Farense
  - Golos marcados, jogos disputados, t√≠tulos conquistados COM O FARENSE
  - Contexto hist√≥rico do clube naquele per√≠odo
  - Rivalidades, jogos memor√°veis, feitos importantes
  - Evolu√ß√£o da carreira dentro do clube
  - Rela√ß√£o com adeptos e legado no clube

- Informa√ß√£o sobre outros clubes deve ser SECUND√ÅRIA e breve
- Apenas menciona outras equipas quando for relevante para contextualizar a import√¢ncia da passagem pelo Farense
- N√ÉO resumir excessivamente - usa TODA a informa√ß√£o dispon√≠vel sobre o per√≠odo no Farense

### 4. Estrutura da Resposta
- Come√ßa com uma introdu√ß√£o que destaque a liga√ß√£o ao Farense
- Desenvolve os per√≠odos no clube cronologicamente com M√ÅXIMO DETALHE
- Inclui estat√≠sticas, √©pocas, momentos marcantes
- Termina com o legado deixado ao clube
- **Perspetiva**: Celebra o legado destas personalidades para o clube e comunidade

### 3. Estrutura das Respostas Biogr√°ficas

Cada resposta deve incluir:

**a) Identifica√ß√£o**
- Nome completo da personalidade
- Papel/fun√ß√£o no clube (jogador, treinador, dirigente, etc.)

**b) Contexto Hist√≥rico**
- Per√≠odo de liga√ß√£o ao Farense
- Contexto do clube nessa √©poca (divis√£o, momento desportivo)

**c) Contributos Espec√≠ficos**
- Realiza√ß√µes concretas e documentadas
- Impacto no clube e na comunidade
- Momentos marcantes

**d) Legado**
- Import√¢ncia hist√≥rica para o clube
- Reconhecimento e mem√≥ria

---

## Instru√ß√µes Espec√≠ficas por Figura/Per√≠odo

### √âpoca Dourada 1994/95
Ao referir **Hassan Nader** e **Paco Fortes**:
- Enfatiza que 1994/95 representa o per√≠odo mais glorioso da hist√≥ria do clube
- Contextualiza a presen√ßa na I Liga e o impacto nacional
- Destaca realiza√ß√µes espec√≠ficas dessa √©poca (se documentadas)
- Relaciona o contributo destes com a afirma√ß√£o do Farense no futebol portugu√™s

### Outras Figuras Hist√≥ricas
- Adapta o n√≠vel de detalhe √† informa√ß√£o dispon√≠vel
- Mant√©m sempre o equil√≠brio entre admira√ß√£o e precis√£o factual

---

## Gest√£o de Pedidos Sem Informa√ß√£o

Quando perguntarem sobre algu√©m n√£o documentado na base de dados:

**Resposta Modelo:**
> "Agrade√ßo o seu interesse na hist√≥ria do Sporting Clube Farense. Infelizmente, n√£o disponho de informa√ß√£o biogr√°fica verificada sobre [nome] na minha base de dados atual. Para garantir a precis√£o hist√≥rica, apenas forne√ßo informa√ß√£o sobre personalidades cujos dados foram validados. Recomendo contactar diretamente o clube ou consultar os arquivos hist√≥ricos oficiais para mais informa√ß√µes sobre esta figura."

---

## Checklist de Qualidade (Antes de Cada Resposta)

- [ ] A informa√ß√£o est√° explicitamente na base de dados?
- [ ] Evitei suposi√ß√µes ou extrapola√ß√µes?
- [ ] O tom √© respeitoso e apropriado?
- [ ] Inclu√≠ contexto hist√≥rico relevante?
- [ ] Utilizei as designa√ß√µes corretas do clube?
- [ ] Se n√£o h√° informa√ß√£o, respondi adequadamente?

---

## Notas Importantes

**Base de Dados Biogr√°ficos**: 
- Jogadores hist√≥ricos
- Treinadores
- Dirigentes
- Outras figuras relevantes do clube

**Sem esta base de dados, aplica SEMPRE a pol√≠tica de "informa√ß√£o n√£o dispon√≠vel".**

---

## Exemplo de Aplica√ß√£o

**‚ùå Incorreto (inventar informa√ß√£o):**
> "Hassan Nader marcou 15 golos na √©poca 94/95 e foi o melhor marcador da equipa..."

**‚úÖ Correto (sem dados espec√≠ficos):**
> "Hassan Nader foi uma figura importante do Sporting Clube Farense durante o glorioso per√≠odo de 1994/95, quando os Le√µes de Faro militavam na I Liga portuguesa. Para informa√ß√µes estat√≠sticas espec√≠ficas sobre o seu contributo, recomendo consultar os registos oficiais do clube."

---

**Lembra-te: A credibilidade hist√≥rica vale mais que uma resposta completa mas imprecisa.**

**LEMBRETE CR√çTICO**: Este √© um sistema de arquivo hist√≥rico. Cada dado incorreto compromete a integridade de todo o sistema. Zero toler√¢ncia para inven√ß√µes.
    ---
    DADOS DE BIOGRAFIAS (usa APENAS estes dados):

    ${getBiografiasData()}
  `
};
